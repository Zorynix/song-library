version: "3.9"

services:
  postgres:
    container_name: song_library_db
    image: postgres:17.4-alpine3.21
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: song_library
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "song_library"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5432:5432"
    restart: always

  app:
    container_name: song_library_app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./logs:/logs
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      DB_NAME: song_library
      APP_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - app
    restart: unless-stopped

    grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    restart: unless-stopped

volumes:
  pg-data:
  prometheus-data:
  grafana-data: